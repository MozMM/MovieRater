{"version":3,"sources":["images/RightPointing.png","Components/Header.js","store/movieActionTypes.js","store/movieSelectors.js","images/Cow.jpg","Components/AllMovieResults.js","utils/stringUtils.js","store/movieActions.js","images/ThumbsUp.png","images/ThumbsDown.png","Components/MovieDetail.js","images/Turtle.jpg","Components/NotFoundPage.js","Components/Routes.js","store/moviesReducer.js","store/index.js","Components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","src","rightPointer","alt","id","MOVIE_DATA_LOADING","GET_MOVIES_SUCCESS","GET_MOVIES_SUCCESS_NO_RESULTS","MOVIE_DETAIL_LOADING","GET_MOVIE_DETAIL_SUCCESS","GET_MOVIE_DATA_FAIL","GET_RATING_FROM_DB","GET_RATING_FROM_DB_FAIL","isLoadingSelector","state","moviesReducer","isLoading","movieResultsSelector","movieResults","movieErrorSelector","errorMsg","movieDetailSelector","movieDetail","ratingFromDataBaseSelector","ratingFromDataBase","renderPoster","movie","poster_path","title","renderNoMooviesMsg","message","splitMsg","text","split","checkAndSplitMsg","cow","AllMovieResults","props","dispatch","useDispatch","useSelector","movieFetchErrors","hasResults","length","useState","input","setInput","type","onChange","evt","target","value","onClick","searchString","a","types","axios","get","process","moviesResponse","data","total_results","payload","results","map","renderRatings","thumbsUp","thumbsDown","MovieDetail","fullDateString","match","params","selectedMovie","useEffect","movieDetailResponse","movieCreditsResponse","directorObj","directorName","crew","filter","crewMember","job","name","director","getMovieDetail","movieRatingResponse","getRating","release_date","slice","overview","post","updatedRatingResponse","thumbsUpImage","thumbsDownImage","NotFoundPage","turtle","Routes","exact","path","component","Component","initialState","dataBaseErr","reducer","combineReducers","action","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed321109.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/RightPointing.ca24b20e.png\";","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport rightPointer from '../images/RightPointing.png'\n\n// break points and media queries. \nconst Header = () => {\n  return (\n    <div className='header'> \n        <div className='header-stuff__container'>\n          <Link to='/'>\n            <img className='pointer-image' src={rightPointer} alt=''/>\n            <div id='header__text'>{'Movie Rate-I-fier'}</div> \n          </Link>\n        </div>\n    </div>\n  )\n}\n\nexport default Header;\n","//----------- action types ------------//\nexport const MOVIE_DATA_LOADING = 'MOVIE_DATA_LOADING';\nexport const GET_MOVIES_SUCCESS = 'GET_MOVIES_SUCCESS';\nexport const GET_MOVIES_SUCCESS_NO_RESULTS = 'GET_MOVIES_SUCCESS_NO_RESULTS';\nexport const MOVIE_DETAIL_LOADING = 'MOVIE_DETAIL_LOADING';\nexport const GET_MOVIE_DETAIL_SUCCESS = 'GET_MOVIE_DETAIL_SUCCESS';\nexport const GET_MOVIE_DATA_FAIL = 'GET_MOVIE_FAIL';\nexport const GET_RATING_FROM_DB = 'GET_RATING_FROM_DB';\nexport const GET_RATING_FROM_DB_FAIL = 'GET_RATING_FROM_DB_FAIL';\n","\n\nexport const isLoadingSelector = (state) => state.moviesReducer.isLoading;\n\nexport const movieResultsSelector = (state) => state.moviesReducer.movieResults;\n\nexport const movieErrorSelector = (state) => state.moviesReducer.errorMsg;\n\nexport const movieDetailSelector = (state) => state.moviesReducer.movieDetail;\n\nexport const ratingFromDataBaseSelector = (state) => state.moviesReducer.ratingFromDataBase;","export default __webpack_public_path__ + \"static/media/Cow.18bf5238.jpg\";","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMovies } from '../store/movieActions';\nimport { checkAndSplitMsg } from '../utils/stringUtils'\nimport { \n  movieErrorSelector, \n  movieResultsSelector,\n  isLoadingSelector\n} from '../store/movieSelectors';\nimport cow from '../images/Cow.jpg'\n\nconst renderPoster = (movie) => {\n  return (movie.poster_path ?\n    <img className='movie-results__poster' src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title}/>\n    :\n    <div className='movie-results__poster__default'>\n      <div className='default-text'>{movie.title}</div>\n      <div>{'No image available'}</div>\n    </div> \n  )\n}\n\nconst renderNoMooviesMsg = (message) => {\n  const splitMsg = checkAndSplitMsg(message)\n  return (\n    <div className='cow-error__container'>\n      <div className='cow-text__container'> \n        <div className='cow-text'>{splitMsg[0]}</div> \n        <div className='cow-text'>{splitMsg[1]}</div>\n        <div >{splitMsg[2]}</div>\n      </div>\n      <img src={cow} alt=''/>\n    </div>\n  )\n}\n\nconst AllMovieResults = (props) => {\n  const dispatch = useDispatch();\n  const movieResults = useSelector(movieResultsSelector);\n  const movieFetchErrors = useSelector(movieErrorSelector);\n  const isLoading = useSelector(isLoadingSelector);\n  const hasResults = movieResults.length > 0;\n\n  const [input, setInput] = useState('');\n\n  const handleInputChange = (evt) => setInput(evt.target.value);\n\n  if (isLoading) {\n    return (\n      <div className='loading-text__container'>\n        <div className='loading-text'>{'Loading...'}</div>\n      </div>\n    )\n  } \n\n  return (\n    <>\n      <div className='search-container'>\n        <div className='search'>\n          <form className='search__form'>\n            <label className='search__label'>{'What are you looking for?'}</label>\n            <span className='search__button-container'>\n              <input className='search__input' type=\"text\" onChange={handleInputChange} />\n              <button  className='search__button' type='submit' \n                onClick={() => dispatch(getMovies(input))}\n              >\n                {'Search Movies'}\n              </button>\n            </span>\n          </form>\n        </div>\n      </div> \n      <div>\n        {hasResults && \n          <div>\n            <div className='movie-results__container movie-results__instructions'> \n            {'Click on a poster for details, or to add your rating.'}\n            </div>\n            <div className=\"movie-results__container\"> \n              {movieResults.map((movie) => (\n                <div key={movie.id}>\n                  <Link to={`/movie/${movie.id}`}>\n                    {renderPoster(movie)}\n                  </Link>\n                </div>\n              ))}\n            </div>\n          </div>\n          }\n        <div>\n        {movieFetchErrors && renderNoMooviesMsg(movieFetchErrors)}\n        </div>\n      </div>  \n    </>\n  )\n}\n\nexport default AllMovieResults;\n","export const justYear = (fullDateString) => {\n return fullDateString.slice(0,4)\n};\n\nexport const checkAndSplitMsg = (message) => {\n  let text = 'No Moovies. \\n Please try \\n a different query.';\n  if (message === 'Request failed with status code 422') {\n    text = 'No Moovies. \\n Please provide \\n a search query!'\n  }\n  return text.split('\\n')\n};","import axios from 'axios'\nimport * as types from './movieActionTypes';\n\n//----------- Get Movies -----------//\nexport const getMovies = (searchString) => async (dispatch) => {\n  dispatch({\n    type: types.MOVIE_DATA_LOADING,\n  })\n  try {\n    let moviesResponse = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US&query=${searchString}&page=1&include_adult=false`);\n    if (moviesResponse.data.total_results === 0) {\n      dispatch({\n        type: types.GET_MOVIES_SUCCESS_NO_RESULTS,\n        payload: moviesResponse.data.results \n      })\n    } else if (moviesResponse.data.results) {\n      dispatch({\n        type: types.GET_MOVIES_SUCCESS,\n        payload: moviesResponse.data.results \n      })\n    }\n  \n  } catch (err) {\n    dispatch({\n      type: types.GET_MOVIE_DATA_FAIL,\n      payload: err\n    })\n  }\n}\n\n//-----------Get Single Movie Detail -----------//\nexport const getMovieDetail = (id) => async (dispatch) => {\n  dispatch({\n    type: types.MOVIE_DETAIL_LOADING,\n  })\n  try {\n    let movieDetailResponse = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US`)\n    let movieCreditsResponse = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US`)\n    let directorObj = {};\n    let directorName = 'Name not available';\n      if (movieCreditsResponse.data) {\n        directorObj = movieCreditsResponse.data.crew.filter(crewMember => crewMember.job === \"Director\")[0];\n        if (directorObj) {\n          directorName = directorObj.name;\n        }\n      }\n      if (movieDetailResponse.data) {\n        dispatch({\n          type: types.GET_MOVIE_DETAIL_SUCCESS,\n          payload: {\n            ...movieDetailResponse.data, \n            director: directorName\n          }\n        })\n      }\n  } catch (err) {\n    dispatch({\n      type: types.GET_MOVIE_DATA_FAIL,\n      payload: err\n    })\n  }\n}\n\n//---------------Database Actions--------------// \nexport const getRating = (id) => async (dispatch) => {\n  try {\n    let movieRatingResponse = await axios.get(`/api/ratings/${id}`);\n    if (movieRatingResponse) {\n      dispatch({\n        type: types.GET_RATING_FROM_DB,\n        payload: movieRatingResponse.data\n      })\n    }\n  } catch {\n    dispatch({\n      type: types.GET_RATING_FROM_DB_FAIL,\n      payload: 'please check database connection.'\n    })\n  }\n}\n\nexport const thumbsUp = (id) => async (dispatch) => {\n  try {\n    let updatedRatingResponse = await axios.post(`/api/ratings/${id}/up`);\n    if (updatedRatingResponse) {\n      dispatch({\n        type: types.GET_RATING_FROM_DB,\n        payload: {\n            thumbsUp: updatedRatingResponse.data.thumbsUp,\n            thumbsDown: updatedRatingResponse.data.thumbsDown\n          }\n      })\n    }\n  } catch(err) {\n    dispatch({\n      type: types.GET_RATING_FROM_DB_FAIL,\n      payload: 'please check database connection.'\n    })\n  }\n}\n\nexport const thumbsDown = (id) => async (dispatch) => {\n  try {\n    let updatedRatingResponse = await axios.post(`/api/ratings/${id}/down`);\n    if (updatedRatingResponse) {\n      dispatch({\n        type: types.GET_RATING_FROM_DB,\n        payload: {\n            thumbsUp: updatedRatingResponse.data.thumbsUp,\n            thumbsDown: updatedRatingResponse.data.thumbsDown\n          }\n      })\n    }\n  } catch(err) {\n    dispatch({\n      type: types.GET_RATING_FROM_DB_FAIL,\n      payload: 'please check database connection.'\n    })\n  }\n}\n","export default __webpack_public_path__ + \"static/media/ThumbsUp.75b42780.png\";","export default __webpack_public_path__ + \"static/media/ThumbsDown.12398e01.png\";","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { isLoadingSelector, movieDetailSelector, ratingFromDataBaseSelector } from '../store/movieSelectors';\nimport { getMovieDetail, getRating, thumbsUp, thumbsDown } from '../store/movieActions';\nimport { justYear } from '../utils/stringUtils';\nimport thumbsUpImage from '../images/ThumbsUp.png';\nimport thumbsDownImage from '../images/ThumbsDown.png';\n\nconst renderPoster = (movie) => {\n  return ( movie.poster_path ?\n    <img className='movie-detail__poster' src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title}/>\n    :\n    <div className='movie-detail__poster__default'>\n      <div>{movie.title}</div>\n      <div>{'No image available'}</div> \n    </div> \n  )\n}\n\nconst renderRatings = (ratingFromDataBase) => { \n  if (!ratingFromDataBase) {\n    return (<div className='ratings__container'> <div className='rating-text'>{'No one around here has voted on this movie yet, go ahead and be the first.'}</div></div>);\n  }\n  const { thumbsUp, thumbsDown } = ratingFromDataBase;\n  return (\n    <div className='ratings__container'>\n      <span className='ratings__text'> {`Thumbs Up: ${thumbsUp}`}</span>\n      <span className='ratings__symbol'>{'❖'}</span>\n      <span className='ratings__text'>{`Thumbs Down: ${thumbsDown}`}</span>\n    </div> \n  );\n}\n\nconst MovieDetail = (props) => {\n  const { match: { params: { id }}} = props;\n  const dispatch = useDispatch();\n  const ratingFromDataBase = useSelector(ratingFromDataBaseSelector)\n  const selectedMovie = useSelector(movieDetailSelector) \n  const isLoading = useSelector(isLoadingSelector);\n\n  useEffect(() => {\n    dispatch(getMovieDetail(id));\n    dispatch(getRating(id))\n    // eslint-disable-next-line\n  }, []); // empty [] will only run callback on mount. \n\n  if (isLoading) {\n    return (\n      <div className='loading-text__container'>\n        <div className='loading-text'>{'Loading...'}</div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"movie-detail__container\">\n      <div className='movie-detail__poster__container'>\n        {renderPoster(selectedMovie)}\n      </div>\n      <div className='movie-detail__text__container'>\n        <div className='movie-detail__title'>{`${selectedMovie.title}`}</div>\n        <div className='movie-detail__text'>{`Director: ${selectedMovie.director}`}</div>\n        {selectedMovie.release_date && \n        <div className='movie-detail__text'> {`Released: ${justYear(selectedMovie.release_date)}`}</div>}\n        <div className='movie-detail__text'>{` Description: ${selectedMovie.overview}`}</div>\n        <div> \n          {renderRatings(ratingFromDataBase)}\n        </div> \n        <div className='thumbs__container'>\n          <div> \n            <button\n            className='search__button thumbs__button'\n            onClick={() => dispatch(thumbsUp(selectedMovie.id))}\n            >\n              <img className='thumbs-image' src={thumbsUpImage} alt='up'/>\n            </button>\n          </div> \n          <div> \n            <button\n            className='search__button thumbs__button'\n            onClick={() => dispatch(thumbsDown(selectedMovie.id))}\n            >\n            <img className='thumbs-image' src={thumbsDownImage} alt='down'/>\n            </button>\n          </div> \n        </div>\n        <div className='back-button__container'> \n          <div>\n            <Link to='/'>\n              <button\n              className='search__button'\n              >\n              {'Back to Search'}\n              </button>\n            </Link>\n          </div>\n        </div> \n      </div>\n    </div>\n  )\n};\n\nexport default MovieDetail;\n","export default __webpack_public_path__ + \"static/media/Turtle.ec316491.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport turtle from '../images/Turtle.jpg';\n\nconst NotFoundPage = () => {\n  return (\n    <div className='notFound__container'>\n      <img src={turtle} alt=''/>\n      <div > \n        <div className='notFound__text'>{'Nothing over here...'}</div> \n        <Link to='/'>\n          <button\n          className='search__button'\n          >\n          {'Back to Search'}\n          </button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default NotFoundPage;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Header from './Header'\nimport AllMovieResults from './AllMovieResults';\nimport MovieDetail from './MovieDetail';\nimport NotFoundPage from './NotFoundPage';\n\nexport class Routes extends Component {\n  render() {\n    return (\n      <div>\n        <Header/>\n        <Switch>\n          <Route exact path=\"/\" component={ AllMovieResults } />\n          <Route path=\"/movie/:id\" component={ MovieDetail } />\n          <Route path=\"*\" component={ NotFoundPage } />\n        </Switch>\n      </div>\n    )\n  }\n}\n\n","import * as types from './movieActionTypes';\n\n//----------- initial state ----------//\nexport const initialState = {\n  movieResults: [],\n  movieDetail: {},\n  ratingFromDataBase: null,\n  dataBaseErr: null,\n  errorMsg: false,\n  isLoading: false\n}\n\n//---------- reducer ----------//\nexport function moviesReducer(state = initialState, action) {\n  switch (action.type) {\n    case types.MOVIE_DATA_LOADING: \n      return { ...state, movieResults: [], isLoading: true, errorMsg: null };\n    case types.MOVIE_DETAIL_LOADING: \n      return { ...state, isLoading: true, errorMsg: null };\n    case types.GET_MOVIES_SUCCESS: \n      return { ...state, movieResults: action.payload, errorMsg: null, isLoading: false };\n    case types.GET_MOVIES_SUCCESS_NO_RESULTS:\n      return {...state, movieResults: action.payload, errorMsg: 'No Moovies. \\n Please try \\n a different query.', isLoading: false }\n    case types.GET_MOVIE_DETAIL_SUCCESS:\n      return {...state, movieDetail: action.payload, errorMsg: null, isLoading: false };\n    case types.GET_MOVIE_DATA_FAIL:\n      return { ...state, errorMsg: action.payload.message, isLoading: false };\n    case types.GET_RATING_FROM_DB:\n      return {...state, ratingFromDataBase: action.payload, dataBaseErr: null };\n    case types.GET_RATING_FROM_DB_FAIL:\n      return {...state, dataBaseErr: action.payload };\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware} from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { moviesReducer } from './moviesReducer'\n\nconst reducer = combineReducers({\n  moviesReducer,\n})\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({collapsed: true}))\n)\n\nconst store = createStore(reducer, middleware)\n\nexport default store\nexport * from './moviesReducer'\n// export * from './ratingsReducer'","import { Routes } from './Routes'\nimport { BrowserRouter } from \"react-router-dom\"\nimport { Provider } from 'react-redux'\nimport store from '../store'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <Routes/>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css'\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}